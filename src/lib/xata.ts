// Generated by Xata Codegen 0.27.0. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "Users",
    columns: [
      { name: "first_name", type: "string" },
      { name: "last_name", type: "string" },
      { name: "email", type: "email", unique: true },
      { name: "courses", type: "link", link: { table: "Course" } },
    ],
  },
  {
    name: "Course",
    columns: [
      { name: "course_name", type: "string", notNull: true, defaultValue: "" },
      { name: "files", type: "file[]" },
    ],
    revLinks: [{ column: "courses", table: "Users" }],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Users = InferredTypes["Users"];
export type UsersRecord = Users & XataRecord;

export type Course = InferredTypes["Course"];
export type CourseRecord = Course & XataRecord;

export type DatabaseSchema = {
  Users: UsersRecord;
  Course: CourseRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL: "https://Course-Companion-t0b82o.eu-central-1.xata.sh/db/main",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
